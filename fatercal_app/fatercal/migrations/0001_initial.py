# Generated by Django 2.2 on 2019-04-03 21:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TaxrefExport',
            fields=[
                ('regne', models.CharField(max_length=250, verbose_name='Régne')),
                ('phylum', models.CharField(max_length=250, verbose_name='Régne')),
                ('classe', models.CharField(max_length=250, verbose_name='Régne')),
                ('ordre', models.CharField(max_length=250, verbose_name='Régne')),
                ('famille', models.CharField(max_length=250, verbose_name='Régne')),
                ('group1_inpn', models.CharField(max_length=250, verbose_name='Group1 INPN')),
                ('group2_inpn', models.CharField(max_length=250, verbose_name='Group2 INPN')),
                ('id', models.BigIntegerField()),
                ('id_ref', models.BigIntegerField()),
                ('cd_nom', models.IntegerField(blank=True, null=True, unique=True)),
                ('cd_taxsup', models.IntegerField(blank=True, null=True)),
                ('cd_ref', models.IntegerField(blank=True, null=True)),
                ('cd_sup', models.IntegerField(blank=True, null=True)),
                ('rang', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('lb_nom', models.CharField(max_length=250, verbose_name='Nom')),
                ('lb_auteur', models.CharField(blank=True, max_length=250, null=True, verbose_name='Auteur')),
                ('nom_complet', models.CharField(blank=True, max_length=250, null=True)),
                ('nom_complet_html', models.CharField(blank=True, max_length=250, null=True)),
                ('nom_valide', models.CharField(blank=True, max_length=100, null=True)),
                ('nom_vern', models.CharField(blank=True, max_length=100, null=True)),
                ('nom_vern_eng', models.CharField(blank=True, max_length=100, null=True)),
                ('habitat', models.CharField(blank=True, max_length=100, null=True)),
                ('nc', models.CharField(blank=True, max_length=4, null=True)),
                ('non_present', models.CharField(blank=True, max_length=4, null=True)),
                ('cd_ref_diff', models.CharField(blank=True, max_length=4, null=True)),
                ('cd_sup_diff', models.CharField(blank=True, max_length=4, null=True)),
                ('validity_diff', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'taxref_export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocsUses',
            fields=[
                ('id_docuse', models.AutoField(primary_key=True, serialize=False)),
                ('lb_docuse', models.TextField()),
            ],
            options={
                'db_table': 'docs_uses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HabitatDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'habitat_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Iso6393',
            fields=[
                ('iso639_3', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('language_name', models.CharField(blank=True, max_length=50, null=True)),
                ('language_name_fr', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'iso639-3',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Localisation',
            fields=[
                ('id_loc', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=250, verbose_name='Nom')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('id_sup', models.ForeignKey(blank=True, db_column='id_sup', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.Localisation', verbose_name='Localisation Supérieur')),
            ],
            options={
                'db_table': 'localisation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlanteHote',
            fields=[
                ('id_plante_hote', models.AutoField(db_column='id_plante-hote', primary_key=True, serialize=False)),
                ('famille', models.CharField(blank=True, max_length=100, null=True, verbose_name='Famille')),
                ('genre', models.CharField(blank=True, max_length=100, null=True, verbose_name='Genre')),
                ('espece', models.CharField(blank=True, max_length=100, null=True, verbose_name='Espèce')),
            ],
            options={
                'db_table': 'plante_hote',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Prelevement',
            fields=[
                ('id_prelevement', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.CharField(blank=True, max_length=23, null=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message="La date doit être dans l'une des formes suivantes: 1850, 1850-12, 1850-12-01", regex='(^\\d{4}$)|(^\\d{4}-(0[1-9]|1[0-2])$)|(^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d|3[0-1])$)|(^$)|(^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d|3[0-1])\\/\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d|3[0-1])$)')])),
                ('nb_taxon_present', models.SmallIntegerField(blank=True, null=True, verbose_name='Nombre Individu')),
                ('collection_museum', models.CharField(blank=True, max_length=250, null=True)),
                ('type_specimen', models.CharField(blank=True, max_length=250, null=True)),
                ('code_specimen', models.CharField(blank=True, max_length=250, null=True)),
                ('altitude_min', models.BigIntegerField(blank=True, null=True, verbose_name='Altitude Minimum')),
                ('altitude_max', models.BigIntegerField(blank=True, null=True, verbose_name='Altitude Maximum')),
                ('mode_de_collecte', models.CharField(blank=True, max_length=250, null=True)),
                ('toponyme', models.CharField(blank=True, max_length=250, null=True)),
                ('toponymie_x', models.FloatField(blank=True, null=True)),
                ('toponymie_y', models.FloatField(blank=True, null=True)),
                ('gps', models.NullBooleanField(verbose_name='GPS')),
                ('information_complementaire', models.TextField(blank=True, null=True)),
                ('habitat', models.ForeignKey(blank=True, db_column='id_habitat', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.HabitatDetail', verbose_name='Habitat')),
                ('id_loc', models.ForeignKey(blank=True, db_column='id_loc', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.Localisation', verbose_name='Localisation')),
            ],
            options={
                'db_table': 'prelevement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd_nom', models.IntegerField(blank=True, null=True, unique=True)),
                ('cd_ref', models.IntegerField(blank=True, null=True)),
                ('cd_sup', models.IntegerField(blank=True, null=True)),
                ('lb_nom', models.CharField(max_length=250, verbose_name='Nom')),
                ('lb_auteur', models.CharField(blank=True, max_length=250, null=True, verbose_name='Auteur')),
                ('nom_complet', models.CharField(blank=True, max_length=250, null=True)),
                ('grande_terre', models.NullBooleanField()),
                ('iles_loyautee', models.NullBooleanField(verbose_name='Îles Loyauté')),
                ('autre', models.NullBooleanField()),
                ('territoire_fr', models.NullBooleanField()),
                ('remarque', models.TextField(blank=True, null=True)),
                ('sources', models.TextField(blank=True, null=True)),
                ('id_espece', models.IntegerField(blank=True, null=True)),
                ('reference_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'taxon',
                'ordering': ['lb_nom'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaxrefHabitat',
            fields=[
                ('habitat', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('lb_habitat', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'taxref_habitat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaxrefRang',
            fields=[
                ('rang', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('lb_rang', models.CharField(max_length=100, verbose_name='Rang')),
            ],
            options={
                'db_table': 'taxref_rang',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaxrefStatus',
            fields=[
                ('status', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('lb_status', models.TextField()),
            ],
            options={
                'db_table': 'taxref_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeEnregistrement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lb_type', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'type_enregistrement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeLoc',
            fields=[
                ('id_type', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=10, verbose_name='Type')),
            ],
            options={
                'db_table': 'type_loc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vernaculaire',
            fields=[
                ('id_taxvern', models.AutoField(primary_key=True, serialize=False)),
                ('nom_vern', models.CharField(max_length=100, verbose_name='Nom Vernaculaire')),
                ('pays', models.CharField(max_length=100, verbose_name="Pays d'utilisation")),
                ('id_taxref', models.ForeignKey(db_column='id_taxref', on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.Taxon', verbose_name='Taxon')),
                ('iso639_3', models.ForeignKey(db_column='iso639-3', on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.Iso6393')),
            ],
            options={
                'db_table': 'vernaculaire',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='taxon',
            name='habitat',
            field=models.ForeignKey(blank=True, db_column='habitat', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.TaxrefHabitat'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='id_ref',
            field=models.ForeignKey(blank=True, db_column='id_ref', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_ref+', to='fatercal.Taxon', verbose_name='Référent'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='id_sup',
            field=models.ForeignKey(blank=True, db_column='id_sup', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='id_sup+', to='fatercal.Taxon', verbose_name='Rang Supérieur'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='nc',
            field=models.ForeignKey(blank=True, db_column='nc', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.TaxrefStatus', verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='rang',
            field=models.ForeignKey(db_column='rang', on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.TaxrefRang', verbose_name='rang'),
        ),
        migrations.CreateModel(
            name='Recolteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lb_auteur', models.CharField(blank=True, max_length=250, null=True, verbose_name='Récolteurs')),
                ('id_prelevement', models.ForeignKey(blank=True, db_column='id_prelevement', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.Prelevement')),
            ],
            options={
                'db_table': 'recolteur',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='prelevement',
            name='id_taxref',
            field=models.ForeignKey(db_column='id_taxref', on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.Taxon', verbose_name='Taxon'),
        ),
        migrations.AddField(
            model_name='prelevement',
            name='plante_hote',
            field=models.ForeignKey(blank=True, db_column='id_plante_hote', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.PlanteHote', verbose_name='Plante Hote'),
        ),
        migrations.AddField(
            model_name='prelevement',
            name='type_enregistrement',
            field=models.ForeignKey(blank=True, db_column='type_enregistrement', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.TypeEnregistrement'),
        ),
        migrations.AddField(
            model_name='localisation',
            name='loc_type',
            field=models.ForeignKey(db_column='loc_type', on_delete=django.db.models.deletion.DO_NOTHING, to='fatercal.TypeLoc', verbose_name='Type'),
        ),
        migrations.CreateModel(
            name='Hote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_hote', models.ForeignKey(db_column='id_hote', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hote', to='fatercal.Taxon', verbose_name='Hote')),
                ('id_parasite', models.ForeignKey(db_column='id_parasite', on_delete=django.db.models.deletion.DO_NOTHING, related_name='parasite', to='fatercal.Taxon', verbose_name='Parasite')),
            ],
            options={
                'db_table': 'hote',
                'managed': True,
                'unique_together': {('id_hote', 'id_parasite')},
            },
        ),
    ]
